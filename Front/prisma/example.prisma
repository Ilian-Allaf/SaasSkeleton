generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:postgrespassword@localhost:5432/postgres?schema=auth"
}

model User {
  id                        String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  emailVerified             Boolean                 @default(false)
  username                  String                  @unique
  password                  String?
  email                     String                  @unique
  role                      String                  @default("user")
  image                     String?

  appleId                   String?                 @unique
  googleId                  String?                 @unique
  createdAt                 DateTime                @db.Timestamptz @default(now())
  updatedAt                 DateTime                @db.Timestamptz @updatedAt

  sessions                  Session[]
  verificationRequests      VerificationRequest []
  passwordResetToken        PasswordResetToken[]

  @@map("user")
}

model Session {
  id                        String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token                     String                  @unique
  userId                    String                  
  createdAt                 DateTime                @db.Timestamptz @default(now())
  expiresAt                 DateTime                @db.Timestamptz
  ip                        String?                 @db.Inet

  user                      User                    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}


model VerificationRequest  {
  id                        String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token                     String                  @unique
  createdAt                 DateTime                @default(now()) @map("created_at")
  verifiedAt                DateTime?               @map("verified_at")
  userId                    String                  @map("user_id")

  user                      User                    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("activate_token")
}

model PasswordResetToken {
  id                        String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token                     String                  @unique
  createdAt                 DateTime                @default(now()) @map("created_at")
  resetAt                   DateTime?               @map("reset_at")
  userId                    String                  @map("user_id")

  user                      User                    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("password_reset_token")
}
