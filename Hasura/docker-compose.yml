version: "3.6"
services:
  postgres:
    image: postgres:15
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
    ports:
      - "5432:5432"
  graphql-engine:
    image: hasura/graphql-engine:v2.35.0
    ports:
      - "8080:8080"
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"RS512", "key": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAn/uNG5BkC2yL9oj7Cp26\nP82YZZxa7di09wQeBDVM2PuBtHDp+xBsyH7RRhoY58HjsOTL7qIg1ktxiHHeNzxy\nIGe9eQCgyi1az9AGw5CzPJOkuNbJA4K9hZ+/Rfb3ult+PYLDuF118EXV/WWHgnP+\na3AQdlTCc8lZsIq1luKaBuHxVbrFQZj3y5I9MJkJ0R0DuwjHt6mIzY4nbNOCL8NC\nohXSOdpboeyQ/9y0b5iimBTLKr4xapWpnZxgdRHOSDUc48dVjpZyOkmyBue9pQBU\npesor5FZDODPpfq6IFcrny1mjr2ddCtoBVIoxEERntnVWgynnSFjaVBQ8vrOTuIk\ndwIDAQAB\n-----END PUBLIC KEY-----\n"}'
      # HASURA_GRAPHQL_METADATA_DEFAULTS: '{"backend_configs":{"dataconnector":{"athena":{"uri":"http://data-connector-agent:8081/api/v1/athena"},"mariadb":{"uri":"http://data-connector-agent:8081/api/v1/mariadb"},"mysql8":{"uri":"http://data-connector-agent:8081/api/v1/mysql"},"oracle":{"uri":"http://data-connector-agent:8081/api/v1/oracle"},"snowflake":{"uri":"http://data-connector-agent:8081/api/v1/snowflake"}}}}'
    depends_on:
      - postgres
  maildev:
    image: maildev/maildev
    restart: always
    ports:
      - "8081:1080"
      - "8025:1025"
volumes:
  db_data:
